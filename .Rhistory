get_orchard
}
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
plant.orchard()
plant.orchard
get_orchard
plant.tree()
plant.tree
first.project <- function(project.path="",publish.path=""){
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
project.path <- file.path(project.path,project.id)
publish.path <- file.path(swap.directory,project.id)
head.orchard <- data.frame(project.id=project.id,project.path=project.path,swap.directory=publish.path)
write.csv(head.orchard,orchard.site,row.names=FALSE)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
first.project <- function(project.path="",publish.path=""){
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
project.path <- file.path(project.path,project.id)
publish.path <- file.path(publish.path,project.id)
head.orchard <- data.frame(project.id=project.id,project.path=project.path,swap.directory=publish.path)
write.csv(head.orchard,orchard.site,row.names=FALSE)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
plant.tree
first.project <- function(project.path="",publish.path=""){
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
project.path <- file.path(project.path,project.id)
publish.path <- file.path(publish.path,project.id)
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
first.project <- function(project.path="",publish.path=""){
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
plant.tree
plant.tree <- function(project.id,project.path,swap.directory){
project.path <- file.path(project.path,project.id)
swap.directory <- file.path(swap.directory,project.id)
empty.orchard <- data.frame(project.id=project.id,project.path=project.path,swap.directory=swap.directory)
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
if(!file.exists(orchard.site)){plant.orchard()}
all.orchards <- get_orchard()
if(project.id %in% all.orchards$project.id){
print("Project Exists")
return(FALSE)
}else{
orchards.old <- read.csv(orchard.site,as.is=TRUE)
write.csv(rbind(orchards.old,empty.orchard),orchard.site,row.names=FALSE)
dir.create(swap.directory)
dir.create(project.path)
dir.create(file.path(project.path,project.directory.tree$analysis))
dir.create(file.path(project.path,project.directory.tree$data))
sprout.program(project.id,source.file.name=NA,description="",seed=2011,capture.load.command="library(adapr)",controller=TRUE)
test <- sprout.program(project.id,source.file.name="read_data.R",description="reads data",seed=2011,capture.load.command="library(adapr)",controller=FALSE)
try({
clean_source(file.path(project.path,project.directory.tree$analysis,"read_data.R"),quiet=TRUE)
})
if(!test){
# revert to old orchard if failure
write.csv(orchards.old,orchard.site,row.names=FALSE)
}
return(test)
}
}
first.project <- function(project.path="",publish.path=""){
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
#' Create project hub files in root directory
#' @return logical for succesful creation or not
#' @export
#'
plant.orchard <- function(){
#
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
if(!file.exists(orchard.site)){
dir.create(file.path(path.expand.2("~"),"ProjectPaths"))
empty.orchard <- data.frame(project.id="",project.path="",swap.directory="")[-1,]
write.csv(empty.orchard,orchard.site,row.names=FALSE)
return(TRUE)
}
return(FALSE)
}
#' Create first project
#' @param project.path Path where first project will go
#' @param publish.path Path to share project results
#' @return logical for succesful creation or not
#' @export
#'
first.project <- function(project.path="",publish.path=""){
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
plant.tree
load_all()
library(adapr)
sessionInfo()
plant.tree
plant.orchard
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
project.path <- "/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap"
publish.path <- "/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap"
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
!file.exists(orchard.site)
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
}
plant.tree(project.id,project.path,publish.path)
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
file.exists(orchard.site)
project.path
publish.path
plant.tree
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
file.exists(orchard.site)
plant.orchard()
plant.tree(project.id,project.path,publish.path)
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
plant.orchard()
plant.tree
sprout.program
get.project.path("adaprHome")
get.project.path
get.project.path
load_all()
library(adapr)
get.project.path
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
shinyTree()
? setup
Sys.getenv()
set_path
source('~/Documents/Projects/adapr/R/get.orchard.R')
first.project()
system.file
options.site0 <- system.file('adapr_options.csv',package='adapr')
options.site0
? system.file
load_all()
load_all()
library(adapr)
system.file('adapr_options.csv',package='adapr')
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
if(!file.exists(options.site)){
options.site0 <- system.file(option.file,package='adapr')
file.copy(options.site0,options.site)
}
option.data <- read.csv(options.site,as.is=TRUE)
option.data
getEnv()
exists("source_info")
exists("temp")
rm(temp)
exists("temp")
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(knitr)
source.file <-"read_data_2.R"
project.id <- "testadapr"
source_info <- create_source_file_dir(source.description="reads more data")
adapr::shinyTree()
source_info
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(knitr)
source.file <-"read_data_2.R"
project.id <- "testadapr"
source_info <- create_source_file_dir(source.description="reads more data")
sessionInfo()
git2r
detach("package:IT2",unload=TRUE)
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(knitr)
source.file <-"read_data_2.R"
project.id <- "testadapr"
source_info <- create_source_file_dir(source.description="reads more data")
# Program body here
get.project.path
get_orchard()
adapr::shinyTree()
load_all()
library(adapr)
library(adapr)
load_all()
library(adapr)
adapr::shinyTree()
adapr::shinyTree()
get_adapr_option <- function(setoptions=FALSE)
get_adapr_option(setoptions=FALSE)
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
get_adapr_option(setoptions=FALSE)
get_adapr_options <- function(setoptions=FALSE){
#
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
if(!file.exists(options.site)){
options.site0 <- system.file(option.file,package='adapr')
file.copy(options.site0,options.site)
}
option.data <- read.csv(options.site,as.is=TRUE)
adapr_options <- list()
if(nrow(adapr_options)){  for(i in 1:nrow(option.data)){adapr_options[[option.data$option[i]]] <- adapr_options[[option.data$value[i]]]}  }
if(setoptions){
if(!(is.null(adapr_options[["ENVIRONMENT"]]))){Sys.setenv(PATH=adapr_options[["ENVIRONMENT"]])}
}
return(adapr_options)
}
get_adapr_options(setoptions=FALSE)
library(devtools)
load_all()
library(adapr)
get_adapr_options(setoptions=FALSE)
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
get_adapr_options(setoptions=FALSE)
get_adapr_options(setoptions=FALSE)
Sys.getenv()
Sys.getenv()$PATH
Sys.getenv(x="PATH")
get_adapr_options(setoptions=FALSE)
get_adapr_options(setoptions=FALSE)
get_adapr_options(setoptions=FALSE)
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
file.exists(options.site)
option.data <- read.csv(options.site,as.is=TRUE)
option.data
adapr_options <- list()
if(nrow(option.data)){  for(i in 1:nrow(option.data)){adapr_options[[option.data$option[i]]] <- adapr_options[[option.data$value[i]]]}  }
nrow(option.data)
adapr_options
option.data$option[i]
if(nrow(option.data)){  for(i in 1:nrow(option.data)){adapr_options[[option.data$option[i]]] <- option.data$value[i]}  }
adapr_options
if(!(is.null(adapr_options[["PATH"]]))){Sys.setenv(PATH=adapr_options[["PATH"]])}
Sys.getenv("PATH")
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source_info
source('~/Documents/Projects/adapr/R/Render.R')
source('~/Documents/Projects/adapr/R/Render.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source_info
create_markdown
source_info$markdown.dir
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
read.csv
?read.csv
?read.table
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
try(option.data <- read.csv(options.site,as.is=TRUE),silent=TRUE)
try(option.data <- read.csv(options.site,as.is=TRUE,blank.lines.skip=TRUE),silent=TRUE)
try(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE),silent=TRUE)
try(option.data <- read.csv(options.site,as.is=TRUE,skipNul=TRUE),silent=TRUE)
tryCatch(option.data <- read.csv(options.site,as.is=TRUE,skipNul=TRUE),silent=TRUE)
? try
supressWarnings(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE),silent=TRUE)
suppressWarnings(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE),silent=TRUE)
suppressWarnings(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE))
option.data
option.data <- "dsakjlafsdjl;"
source('~/Documents/Projects/adapr/R/get.orchard.R')
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
dependency.out
load_all()
library(adapr)
shinyTree()
sessionInfo()
load_all()
library(adapr)
shinyTree()
load_all()
library(adapr)
shinyTree()
source('~/Documents/Projects/adapr/R/project_report_markdown.R')
load_all()
library(adapr)
shinyTree()
load_all()
library(adapr)
shinyTree()
source('~/Documents/Projects/adapr/R/project_report_markdown.R')
load_all()
library(adapr)
shinyTree()
Render_Rmd("read_data_2.Rmd")
Render_Rmd("read_data_2.Rmd","test",style="docx")
? render
Render_Rmd("read_data_2.Rmd","test",output_format="docx")
Render_Rmd("read_data_2.Rmd","test",output_format="pdf_document")
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
shinyTree()
shinyTree()
load_all()
library(adapr)
shinyTree()
?plant.orchard
plant.orchard
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
shinyTree()
first.project
path.expand.2("~")
load_all()
library(adapr)
first.project
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
dir.exists("/Users/Gelfond/Documents/Projects")
dir.exists("/Users/Gelfond/Documents/Projects/Swap")
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
project.directory.tree
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
plant.orchard()
plant.tree(project.id,project.path,publish.path)
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
get.orchard()
get_orchard()
temp <- get_orchard()
is.null(temp)
temp <- get_orchard()
temp
first.project <- function(project.path="",publish.path=""){
#project.path <- "/Users/Gelfond/Documents/Projects"
#publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- get.orchard()
project.id <- "adaprHome"
if(is.null(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
first.project <- function(project.path="",publish.path=""){
#project.path <- "/Users/Gelfond/Documents/Projects"
#publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- get_orchard()
project.id <- "adaprHome"
if(is.null(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
load_all()
library(adapr)
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
get_orchard
get_orchard
plant.orchard
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
ifelse(!is.null(get_orchard()),get_orchard()$project.id[1],"Configure 1st project!")
!is.null(get_orchard()
)
get_orchard()
temp <- get_orchard()
temp
is.null(temp)
is.null(get_orchard())
ifelse(nrow(get_orchard())>0,get_orchard()$project.id[1],"Configure 1st project!")
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
source('~/Documents/Projects/adapr/R/plant_orchard.R')
load_all()
library(adapr)
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
plant.tree
first.project
plant.tree("adaprHome","/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
shinyTree()
shinyTree()
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
load_all()
library(adapr)
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
load_all()
library(adapr)
first.project
load_all()
library(adapr)
first.project

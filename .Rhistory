load_all()
library(adapr)
get.project.path
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
if(!file.exists(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
shinyTree()
? setup
Sys.getenv()
set_path
source('~/Documents/Projects/adapr/R/get.orchard.R')
first.project()
system.file
options.site0 <- system.file('adapr_options.csv',package='adapr')
options.site0
? system.file
load_all()
load_all()
library(adapr)
system.file('adapr_options.csv',package='adapr')
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
if(!file.exists(options.site)){
options.site0 <- system.file(option.file,package='adapr')
file.copy(options.site0,options.site)
}
option.data <- read.csv(options.site,as.is=TRUE)
option.data
getEnv()
exists("source_info")
exists("temp")
rm(temp)
exists("temp")
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(knitr)
source.file <-"read_data_2.R"
project.id <- "testadapr"
source_info <- create_source_file_dir(source.description="reads more data")
adapr::shinyTree()
source_info
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(knitr)
source.file <-"read_data_2.R"
project.id <- "testadapr"
source_info <- create_source_file_dir(source.description="reads more data")
sessionInfo()
git2r
detach("package:IT2",unload=TRUE)
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(knitr)
source.file <-"read_data_2.R"
project.id <- "testadapr"
source_info <- create_source_file_dir(source.description="reads more data")
# Program body here
get.project.path
get_orchard()
adapr::shinyTree()
load_all()
library(adapr)
library(adapr)
load_all()
library(adapr)
adapr::shinyTree()
adapr::shinyTree()
get_adapr_option <- function(setoptions=FALSE)
get_adapr_option(setoptions=FALSE)
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
get_adapr_option(setoptions=FALSE)
get_adapr_options <- function(setoptions=FALSE){
#
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
if(!file.exists(options.site)){
options.site0 <- system.file(option.file,package='adapr')
file.copy(options.site0,options.site)
}
option.data <- read.csv(options.site,as.is=TRUE)
adapr_options <- list()
if(nrow(adapr_options)){  for(i in 1:nrow(option.data)){adapr_options[[option.data$option[i]]] <- adapr_options[[option.data$value[i]]]}  }
if(setoptions){
if(!(is.null(adapr_options[["ENVIRONMENT"]]))){Sys.setenv(PATH=adapr_options[["ENVIRONMENT"]])}
}
return(adapr_options)
}
get_adapr_options(setoptions=FALSE)
library(devtools)
load_all()
library(adapr)
get_adapr_options(setoptions=FALSE)
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
get_adapr_options(setoptions=FALSE)
get_adapr_options(setoptions=FALSE)
Sys.getenv()
Sys.getenv()$PATH
Sys.getenv(x="PATH")
get_adapr_options(setoptions=FALSE)
get_adapr_options(setoptions=FALSE)
get_adapr_options(setoptions=FALSE)
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
file.exists(options.site)
option.data <- read.csv(options.site,as.is=TRUE)
option.data
adapr_options <- list()
if(nrow(option.data)){  for(i in 1:nrow(option.data)){adapr_options[[option.data$option[i]]] <- adapr_options[[option.data$value[i]]]}  }
nrow(option.data)
adapr_options
option.data$option[i]
if(nrow(option.data)){  for(i in 1:nrow(option.data)){adapr_options[[option.data$option[i]]] <- option.data$value[i]}  }
adapr_options
if(!(is.null(adapr_options[["PATH"]]))){Sys.setenv(PATH=adapr_options[["PATH"]])}
Sys.getenv("PATH")
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source_info
source('~/Documents/Projects/adapr/R/Render.R')
source('~/Documents/Projects/adapr/R/Render.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source_info
create_markdown
source_info$markdown.dir
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
read.csv
?read.csv
?read.table
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
option.file <- "adapr_options.csv"
options.site <- file.path(path.expand.2("~"),"ProjectPaths", option.file)
try(option.data <- read.csv(options.site,as.is=TRUE),silent=TRUE)
try(option.data <- read.csv(options.site,as.is=TRUE,blank.lines.skip=TRUE),silent=TRUE)
try(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE),silent=TRUE)
try(option.data <- read.csv(options.site,as.is=TRUE,skipNul=TRUE),silent=TRUE)
tryCatch(option.data <- read.csv(options.site,as.is=TRUE,skipNul=TRUE),silent=TRUE)
? try
supressWarnings(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE),silent=TRUE)
suppressWarnings(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE),silent=TRUE)
suppressWarnings(option.data <- read.csv(options.site,as.is=TRUE,flush=TRUE))
option.data
option.data <- "dsakjlafsdjl;"
source('~/Documents/Projects/adapr/R/get.orchard.R')
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
source('~/Documents/Projects/adapr/R/get.adapr.options.R')
load_all()
library(adapr)
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
dependency.out
load_all()
library(adapr)
shinyTree()
sessionInfo()
load_all()
library(adapr)
shinyTree()
load_all()
library(adapr)
shinyTree()
source('~/Documents/Projects/adapr/R/project_report_markdown.R')
load_all()
library(adapr)
shinyTree()
load_all()
library(adapr)
shinyTree()
source('~/Documents/Projects/adapr/R/project_report_markdown.R')
load_all()
library(adapr)
shinyTree()
Render_Rmd("read_data_2.Rmd")
Render_Rmd("read_data_2.Rmd","test",style="docx")
? render
Render_Rmd("read_data_2.Rmd","test",output_format="docx")
Render_Rmd("read_data_2.Rmd","test",output_format="pdf_document")
source('~/Documents/Projects/testadapr/Programs/read_data_2.R')
shinyTree()
shinyTree()
load_all()
library(adapr)
shinyTree()
?plant.orchard
plant.orchard
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
shinyTree()
first.project
path.expand.2("~")
load_all()
library(adapr)
first.project
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
dir.exists("/Users/Gelfond/Documents/Projects")
dir.exists("/Users/Gelfond/Documents/Projects/Swap")
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
project.directory.tree
project.path <- "/Users/Gelfond/Documents/Projects"
publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- file.path(path.expand.2("~"),"ProjectPaths","projectid_2_directory_adapr.csv")
project.id <- "adaprHome"
plant.orchard()
plant.tree(project.id,project.path,publish.path)
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
get.orchard()
get_orchard()
temp <- get_orchard()
is.null(temp)
temp <- get_orchard()
temp
first.project <- function(project.path="",publish.path=""){
#project.path <- "/Users/Gelfond/Documents/Projects"
#publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- get.orchard()
project.id <- "adaprHome"
if(is.null(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
first.project <- function(project.path="",publish.path=""){
#project.path <- "/Users/Gelfond/Documents/Projects"
#publish.path <- "/Users/Gelfond/Documents/Projects/Swap"
orchard.site <- get_orchard()
project.id <- "adaprHome"
if(is.null(orchard.site)){
# Create orchard
plant.orchard()
plant.tree(project.id,project.path,publish.path)
return(TRUE)
}
return(FALSE)
}
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
first.project("/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
load_all()
library(adapr)
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
get_orchard
get_orchard
plant.orchard
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
ifelse(!is.null(get_orchard()),get_orchard()$project.id[1],"Configure 1st project!")
!is.null(get_orchard()
)
get_orchard()
temp <- get_orchard()
temp
is.null(temp)
is.null(get_orchard())
ifelse(nrow(get_orchard())>0,get_orchard()$project.id[1],"Configure 1st project!")
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
source('~/Documents/Projects/adapr/R/plant_orchard.R')
load_all()
library(adapr)
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
plant.tree
first.project
plant.tree("adaprHome","/Users/Gelfond/Documents/Projects","/Users/Gelfond/Documents/Projects/Swap")
shinyTree()
shinyTree()
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
load_all()
library(adapr)
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
load_all()
library(adapr)
first.project
load_all()
library(adapr)
first.project
load_all()
library(devtools)
load_all()
library(adapr)
first.project
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')\
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
shiny::runApp('inst/shinyApp')
gsub("\\.(R|r)$","_R","temp.R")
gsub("\\.(R|r)$","_R","temp.r")
load_all()
library(adapr)
shinyTree()
shinyTree()
library(igraph)
shinyTree()
source('~/Documents/Projects/test_adapr/Programs/read_data.R')
source('~/Documents/Projects/adapr/R/project_report_send_rmd.R')
project_report_send_rmd(target.directory=source_info$project.path,si,send.data=FALSE, graph.width = 960, graph.height = 500)
source('~/Documents/Projects/adapr/R/project_report_send_rmd.R')
source('~/Documents/Projects/test_adapr/Programs/read_data.R')
source('~/Documents/Projects/adapr/R/project_report_send_rmd.R')
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,si,send.data=FALSE, graph.width = 960, graph.height = 500)
# End Program Body
dependency.out <- finalize_dependency()
source('~/Documents/Projects/adapr/R/project_report_send_rmd.R')
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,si,send.data=FALSE, graph.width = 960, graph.height = 500)
# End Program Body
dependency.out <- finalize_dependency()
dir.create
source('~/Documents/Projects/adapr/R/project_report_send_rmd.R')
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,si,send.data=FALSE, graph.width = 960, graph.height = 500)
# End Program Body
dependency.out <- finalize_dependency()
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,source_info,send.data=FALSE, graph.width = 960, graph.height = 500)
# End Program Body
dependency.out <- finalize_dependency()
source('~/Documents/Projects/adapr/R/project_report_send_rmd.R')
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,source_info,send.data=FALSE, graph.width = 960, graph.height = 500)
# End Program Body
dependency.out <- finalize_dependency()
source('~/Documents/Projects/adapr/R/project_report_send_rmd.R')
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,source_info,send.data=FALSE, graph.width = 960, graph.height = 500)
# End Program Body
dependency.out <- finalize_dependency()
pull_source_info
get.project.path
get_orchard()
load_all()
q()
library(devtools)
load_all()
library(adapr)
rm(list=ls())
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,source_info,send.data=FALSE, graph.width = 960, graph.height = 500)
library(knitr)
rm(list=ls())
set.seed( 2011 )
library(adapr)
source.file <-"read_data.R"
project.id <- "test_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
project_report_send_rmd(target.directory=source_info$project.path,source_info,send.data=FALSE, graph.width = 960, graph.height = 500)
get.project.publish.path(project.id)
source('~/Documents/Projects/test_adapr/Programs/read_data.R')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
load_all()
load_all()
load_all()
library(devtools)
load_all()
source('~/Documents/Projects/adapr/R/create_source_file_dir.R')
load_all()
library(adapr)
create_source_file_dir
shiny::runApp('inst/shinyApp')
proj
source('~/Documents/Projects/test_adapr/Programs/read_data.R')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
pull_source_info("testadapr")
pull_source_info("test_adapr")
get.project.info.si(pull_source_info("test_adapr"))
get.project.info.si(pull_source_info("test_adapr"))$file
get.project.info.si(pull_source_info("test_adapr"))
get.project.info.si(pull_source_info("test_adapr"))$all.files
project.id <- "test_adapr"
get.project.info.si(pull_source_info(project.id))$all.files
rework.project.path
swap.project.paths
si <- pull_source_info(project.id)
gsub(si$project.path,"",fixed=TRUE,get.project.info.si(si)$all.files$fullname)
file.path("asfd","")
gsub(file.path(si$project.path,""),"",fixed=TRUE,get.project.info.si(si)$all.files$fullname)
si <- pull_source_info(project.id)
files <- get.project.info.si(si)$all.files
paths <- gsub(file.path(si$project.path,""),"",fixed=TRUE,files$fullname)
descriptions <- files$description
paths
descriptions
subset(data.frame(path=paths,description=descriptions),grepl("^Results",path))
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
get_filelist("test_adapr")
get_filelist("test_adapr")$path
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
get_filelist <- function(project.id){
si <- pull_source_info(project.id)
files <- get.project.info.si(si)$all.files
paths <- gsub(file.path(si$project.path,""),"",fixed=TRUE,files$fullname)
descriptions <- files$description
results <- subset(data.frame(path=paths,description=descriptions,stringsAsFactors=FALSE),grepl("^Results",path))
results$path <-  gsub(file.path("Results",""),"",fixed=TRUE,results$path)
return(results)
}
get_filelist("test_adapr")
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
get.project.swap.directory("test_adapr")
get_orchard()
get.project.swap.directory
shiny::runApp('~/Documents/Projects/adapr/inst/shinyApp')
q()
load_all()
q()

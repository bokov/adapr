source('~/Documents/Projects/TB_adapr/Programs/msds_compare_African_pretreat.R')
with(msd2,table(afr_status,Pretreated))
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(gdata)
library(gplots)
library(ggplot2)
library(VarSummarize)
library(car)
library(glmnet)
library(rtfR)
library(limma)
library(survival)
library(knitr)
source.file <-"msds_compare_African_pretreat.R"
project.id <- "TB_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
msd2 <- load(file.path(source_info$data.dir,"msds.Rdata"))
msd2 <- Load.branch("msds.Rdata")
msd2 <- obj
msd2$ttd <- as.numeric(as.character(msd2$ttd))
msd8 <- load(file.path(source_info$data.dir,"msds_8.Rdata"))
msd8 <- obj
msd8 <- Load.branch("msds_8.Rdata")
msd2$TTSC <- Surv(msd2$mtb_l_on_days_sc,msd2$mtb_l_sc)
survout <- survfit(TTSC~1,data=msd2)
msd2$ResponseSpeed <- 0.5
msd2$ResponseSpeed <- ifelse((msd2$mtb_l_on_days_sc<=(4*7))&(msd2$mtb_l_sc==1),1,msd2$ResponseSpeed)
msd2$ResponseSpeed <- ifelse((msd2$mtb_l_on_days_sc>=(8*7)),0,msd2$ResponseSpeed)
table(msd2$ResponseSpeed )
msd2$RPTauc350 <- 1*msd2$AUC24_RPT>350
msd2$Cav4cm <- 1*(msd2$cxrclass==3)
survout <- survfit(TTSC~1,data=msd2)
survout2 <- survfit(TTSC~RPTauc350,data=msd2)
pval <- summary(coxph(TTSC~RPTauc350,data=msd2))$coef[,5]
msd2$CXRExtent <- ifelse(msd2$cxrextnt=="C",1,0)
pretreat <- Load.branch("preTreated.Rdata")
pretreat$Pretreated <- ifelse(pretreat$Pretreated=="PreTreated1wk",1,0)
msd2 <- merge(msd2,subset(pretreat,Pretreated==1,select=c("Study_ID","Pretreated")))
with(msd2,table(afr_status,Pretreated))
head(msd2)
with(msd2,table(afr_strat,Pretreated))
head(pretreat)
pretreat$diffdate <- as.numeric(pretreat$diffdate)
msd2 <- merge(msd2,subset(pretreat,Pretreated==1,select=c("Study_ID","Pretreated","diffdate")))
with(msd2,table(afr_strat,Pretreated))
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(gdata)
library(gplots)
library(ggplot2)
library(VarSummarize)
library(car)
library(glmnet)
library(rtfR)
library(limma)
library(survival)
library(knitr)
source.file <-"msds_compare_African_pretreat.R"
project.id <- "TB_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
msd2 <- load(file.path(source_info$data.dir,"msds.Rdata"))
msd2 <- Load.branch("msds.Rdata")
msd2 <- obj
msd2$ttd <- as.numeric(as.character(msd2$ttd))
msd8 <- load(file.path(source_info$data.dir,"msds_8.Rdata"))
msd8 <- obj
msd8 <- Load.branch("msds_8.Rdata")
msd2$TTSC <- Surv(msd2$mtb_l_on_days_sc,msd2$mtb_l_sc)
survout <- survfit(TTSC~1,data=msd2)
msd2$ResponseSpeed <- 0.5
msd2$ResponseSpeed <- ifelse((msd2$mtb_l_on_days_sc<=(4*7))&(msd2$mtb_l_sc==1),1,msd2$ResponseSpeed)
msd2$ResponseSpeed <- ifelse((msd2$mtb_l_on_days_sc>=(8*7)),0,msd2$ResponseSpeed)
table(msd2$ResponseSpeed )
msd2$RPTauc350 <- 1*msd2$AUC24_RPT>350
msd2$Cav4cm <- 1*(msd2$cxrclass==3)
survout <- survfit(TTSC~1,data=msd2)
survout2 <- survfit(TTSC~RPTauc350,data=msd2)
pval <- summary(coxph(TTSC~RPTauc350,data=msd2))$coef[,5]
msd2$CXRExtent <- ifelse(msd2$cxrextnt=="C",1,0)
pretreat <- Load.branch("preTreated.Rdata")
pretreat$Pretreated <- ifelse(pretreat$Pretreated=="PreTreated1wk",1,0)
pretreat$diffdate <- as.numeric(pretreat$diffdate)
msd2 <- merge(msd2,subset(pretreat,Pretreated==1,select=c("Study_ID","Pretreated","diffdate")))
t.test(dffdate~afr_strat,data=msd2)
t.test(diffdate~afr_strat,data=msd2)
rm(list=ls())
set.seed( 2011 )
library(adapr)
library(gdata)
library(gplots)
library(ggplot2)
library(VarSummarize)
library(car)
library(glmnet)
library(rtfR)
library(limma)
library(survival)
library(knitr)
source.file <-"msds_compare_African_pretreat.R"
project.id <- "TB_adapr"
source_info <- create_source_file_dir(source.description="reads data")
# Program body here
msd2 <- load(file.path(source_info$data.dir,"msds.Rdata"))
msd2 <- Load.branch("msds.Rdata")
msd2 <- obj
msd2$ttd <- as.numeric(as.character(msd2$ttd))
msd8 <- load(file.path(source_info$data.dir,"msds_8.Rdata"))
msd8 <- obj
msd8 <- Load.branch("msds_8.Rdata")
msd2$TTSC <- Surv(msd2$mtb_l_on_days_sc,msd2$mtb_l_sc)
survout <- survfit(TTSC~1,data=msd2)
msd2$ResponseSpeed <- 0.5
msd2$ResponseSpeed <- ifelse((msd2$mtb_l_on_days_sc<=(4*7))&(msd2$mtb_l_sc==1),1,msd2$ResponseSpeed)
msd2$ResponseSpeed <- ifelse((msd2$mtb_l_on_days_sc>=(8*7)),0,msd2$ResponseSpeed)
table(msd2$ResponseSpeed )
msd2$RPTauc350 <- 1*msd2$AUC24_RPT>350
msd2$Cav4cm <- 1*(msd2$cxrclass==3)
survout <- survfit(TTSC~1,data=msd2)
survout2 <- survfit(TTSC~RPTauc350,data=msd2)
pval <- summary(coxph(TTSC~RPTauc350,data=msd2))$coef[,5]
msd2$CXRExtent <- ifelse(msd2$cxrextnt=="C",1,0)
pretreat <- Load.branch("preTreated.Rdata")
pretreat$Pretreated <- ifelse(pretreat$Pretreated=="PreTreated1wk",1,0)
pretreat$diffdate <- as.numeric(pretreat$diffdate)
msd2 <- merge(msd2,subset(pretreat,select=c("Study_ID","Pretreated","diffdate")))
coxph(TTSC~Pretreated + afr_status,data=msd2)
coxph(TTSC~Pretreated + afr_strat,data=msd2)
coxph(TTSC~Pretreated + afr_strat + smear_who,data=msd2)
head(msd2)
coxph(TTSC~Pretreated + afr_strat + smear_who_0,data=msd2)
plot(survfit(TTSC~1,data=msd2))
plot(survfit(TTSC~1,data=msd2))
(survfit(TTSC~1,data=msd2))
shiny::runApp('inst/adapr21')
runApp('inst/adapr21')
source('~/Documents/Projects/test5/Programs/read_data.R')
listDatafiles()
source_info$all.files
source('~/Documents/Projects/test3/Programs/read_data.R')
listDatafiles()
source('~/Documents/Projects/adapr/R/list_files.R')
listDatafiles()
source_info$all.files
pull_source_info("N2K")
dir.exists("/Volumes/WORKING2/Projects/Hernandez/N2K")
listDatafiles()
library(adapr)
load_all()
devtools::load_all()
library(adapr)
library(adapr)
library(adapr)
load_all()
library(devtools)
load_all()
library(adapr)
library(adapr)
rm(list=ls())
set.seed( 2011 )
library(IT2)
library(plyr)
library(dplyr)
library(impute)
library(lcmm)
library(flexmix)
library(reshape2)
library(MplusAutomation)
library(doMC)
source.file <-"pcl_total_lcmm_prepost_fit_test.R"
project.id <- "Williams_PTSD"
source_info <- create.source.file.dir(project.id=project.id,source.file=source.file,get.project.path(project.id),
source.description="tests lcmm for robustness")
# Program body here
rout <- source_info$report
Get.file.info(source_info,path.grep="pcl_hockeystick.Rdata")
prere3 <- Load.branch("pcl_hockeystick.Rdata")
set.seed(2014)
prere <- prere3
pcl.model <- Load.branch("pcl_model.Rdata")
prere$Nightmares   <- ifelse(prere$NIGHTMARES=="Y",TRUE,FALSE)
prere$Avoid_situations <- ifelse(prere$AVOID_SITUATIONS=="Y",TRUE,FALSE)
prere$On_guard <- ifelse(prere$ON_GUARD=="Y",TRUE,FALSE)
prere$Detached <- ifelse(prere$DETACHED=="Y",TRUE,FALSE)
prere$Little_interest <- 1*ifelse(as.numeric(as.character(prere$LITTLE_INTEREST))>0,TRUE,FALSE)
prere$Feeling_down <- ifelse(as.numeric(as.character(prere$FEELING_DOWN))>0,TRUE,FALSE)
risk.matrix <- as.matrix(dplyr::select(prere,Nightmares,Avoid_situations,Detached,On_guard,Feeling_down,Little_interest))
pcl_predictions <- predict(pcl.model,newdata=prere)
colMeans(is.na(risk.matrix))
risk.matrix[rowMeans(is.na(risk.matrix))>0.75,] <- 0
bigMat.impute <- impute.knn(t(risk.matrix))
imputed <- t(bigMat.impute$data)
class(imputed) <- "logical"
imputed <- data.frame(imputed)
imputed$Little_interest <- 1*imputed$Little_interest
pcl_predictions <- predict(pcl.model,newdata=data.frame(imputed),se=TRUE,interval="prediction")
prere$pcl_pred2 <- pcl_predictions$fit[,"fit"]
prere$pcl_pred_se <- (pcl_predictions$fit[,"upr"]-pcl_predictions$fit[,"lwr"])/(2*1.96)
with(prere,plot(prere$pcl_pred2,prere$pcl_pred_se))
with(prere,plot(pcl_prediction,pcl_predictions$fit[,"fit"]))
for(i in 1:10){
x <- prere$pcl_prediction + rnorm(nrow(prere))*prere$pcl_pred_se
prere[[paste0("pcl_imp_",i)]] <- ifelse(x<17,17,ifelse(x>81,81,x))
}
addnoise <- function(x){
y <- x + rnorm(length(x))*7.555
y <- ifelse(y<17,17,ifelse(y>81,81,y))
return(y)
}
with(prere,plot(x,prere$pcl_prediction))
prere3 <- prere
file.info(list.files(source_info$data.dir,full.names=1))
preposts <- Read("DW0001_PCLS-C.csv","pre and post PCL")
preposts$pcldate <- as.Date(preposts$pcls_date,"%m/%d/%Y")
preposts$SID <- preposts$sid
pcl.time <- ddply(prere3,"SID",function(x){
data.frame(refdate = min(x$D_DEPART,na.rm=TRUE))
})
prere3 <- merge(prere3,pcl.time)
#pcls$D_EVENT <- as.Date(pcls$PCLC_date,"%m/%d/%y")
pclssimple <- subset(preposts,select=c("SID","PclsTot","pcldate","visit_type"))
pclssimple <- merge(pclssimple,pcl.time)
pclssimple$study_day <- as.numeric(pclssimple$pcldate - pclssimple$refdate)
#pclssimple$Time.span.days <-
ggplot(pclssimple,aes(x=study_day,fill=visit_type)) + geom_histogram()
ggplot(pclssimple,aes(x=study_day,y=PclsTot)) + geom_point()+geom_smooth()
with23 <- ddply(prere3,"SID",function(x){
data.frame(with3=(max(x$Time.order)>1))
})
max(prere3$TimeEarly)
prerewith3 <- subset(prere3,SID %in% subset(with23,with3==TRUE)$SID)
prerewith3$PclsTot <- prerewith3$pcl_prediction
prerewith3$visit_type <- as.character(prerewith3$Time.order)
alltimes <- rbind.fill(subset(prerewith3,select=c(c("SID","PclsTot","study_day","visit_type"))),
subset(pclssimple,select=c(c("SID","PclsTot","study_day","visit_type"))))
alltimes$visit_type <- as.factor(alltimes$visit_type)
Write(alltimes,"pcl_data.csv","bare bones data")
ggplot(alltimes,aes(x=study_day,fill=visit_type)) + geom_histogram()
ggplot(alltimes,aes(x=study_day,fill=visit_type,y=PclsTot)) + geom_point(aes(color=visit_type))
alltimes$PclsTot.Imp <- ifelse(alltimes$visit_type %in% 1:3,addnoise(alltimes$PclsTot),alltimes$PclsTot)
ggplot(alltimes,aes(x=study_day,fill=visit_type,y=PclsTot.Imp)) + geom_point(aes(color=visit_type))
alltimes$Time <- alltimes$study_day
alltimes$Time2 <- scale((alltimes$Time-mean(alltimes$Time,na.rm=TRUE))^2)
alltimes$Time3 <- scale((alltimes$Time-mean(alltimes$Time,na.rm=TRUE))^3)
temp <- ddply(alltimes,"SID",function(x){
all <- FALSE
if(length(x$visit_type)==5){
if(mean(sort(x$visit_type)==c(1:3,"Post","Pre"))==1){all <- TRUE}
}
return(data.frame(all=all))
})
sum(temp$all==TRUE)
alltimesall <- subset(merge(alltimes,temp),all==TRUE)
alltimesall$PclsTot.Imp <- ifelse(alltimesall$visit_type %in% 1:3,addnoise(alltimesall$PclsTot),alltimesall$PclsTot)
ggplot(alltimesall,aes(x=study_day,fill=visit_type,y=PclsTot.Imp)) + geom_point(aes(color=visit_type))
head(alltimesall)
with(alltimesall,table(SID,visit_type))
addmargins(with(alltimesall,table(SID,visit_type)))
head(addmargins(with(alltimesall,table(SID,visit_type))))
(addmargins(with(alltimes,table(SID,visit_type))))
(addmargins(with(alltimes,table(SID,visit_type))))
tail(addmargins(with(alltimes,table(SID,visit_type))))
alltimesfirst <- ddply(Sortby(alltimes,"study_day"),c("SID","visit_type"),function(x){
x <- x[1,]
})
dim(alltimesfirst)
head(alltimesfirst)
dim(alltimesfirst)
dim(alltimes)
table(alltimes$visit_type)
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
ggplot(alltimesfirst,aes(x=study_day,fill=visit_type,y=PclsTot.Imp)) + geom_point(aes(color=visit_type))
alltimesfirst$visit_type <- as.factor(alltimesfirst$visit_type,levels=c("Pre",1:6,"Post"))
alltimesfirst$visit_type <- factor(alltimesfirst$visit_type,levels=c("Pre",1:6,"Post"))
alltimesfirst$visit_type
dataout <- dcast(SID~study_day,data=alltimesfirst)
dataout <- dcast(SID~study_day,data=alltimesfirst,value.var="PclsTot.Imp")
head(data.out)
head(dataout)
dataout <- dcast(SID~vist_type,data=alltimesfirst,value.var="PclsTot.Imp")
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
head(dataout)
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
names(dataout)[-1] <- paste(names(dataout)[-1],"_PCL")
head(dataout)
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
names(dataout)[-1] <- paste0(names(dataout)[-1],"_PCL")
dataout2 <- dcast(SID~visit_type,data=alltimesfirst,value.var="study_day")
head(dataout2)
head(dataout)
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
names(dataout)[-1] <- paste0(names(dataout)[-1],"_PCL")
dataout2 <- dcast(SID~visit_type,data=alltimesfirst,value.var="study_day")
names(dataout2)[-1] <- paste0(names(dataout2)[-1],"_day")
dataout0 <- merge(dataout,dataout2)
dim(dataout)
dim(dataout2)
head(dataout0)
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
names(dataout)[-1] <- paste0("visit_",names(dataout)[-1],"_PCL")
dataout2 <- dcast(SID~visit_type,data=alltimesfirst,value.var="study_day")
names(dataout2)[-1] <- paste0("visit_",names(dataout2)[-1],"_day")
dataout0 <- merge(dataout,dataout2)
head(dataout0)
for(i in 1:10){
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
names(dataout)[-1] <- paste0("visit_",names(dataout)[-1],"_PCL")
dataout2 <- dcast(SID~visit_type,data=alltimesfirst,value.var="study_day")
names(dataout2)[-1] <- paste0("visit_",names(dataout2)[-1],"_day")
dataout0 <- merge(dataout,dataout2)
Write(dataout0,paste0("imputed_pcl_",i,".csv"))
}
rm(list=ls())
set.seed( 2011 )
library(IT2)
library(plyr)
library(dplyr)
library(impute)
library(lcmm)
library(flexmix)
library(reshape2)
library(MplusAutomation)
library(doMC)
source.file <-"pcl_total_lcmm_prepost_fit_test.R"
project.id <- "Williams_PTSD"
source_info <- create.source.file.dir(project.id=project.id,source.file=source.file,get.project.path(project.id),
source.description="tests lcmm for robustness")
# Program body here
rout <- source_info$report
Get.file.info(source_info,path.grep="pcl_hockeystick.Rdata")
prere3 <- Load.branch("pcl_hockeystick.Rdata")
set.seed(2014)
prere <- prere3
pcl.model <- Load.branch("pcl_model.Rdata")
prere$Nightmares   <- ifelse(prere$NIGHTMARES=="Y",TRUE,FALSE)
prere$Avoid_situations <- ifelse(prere$AVOID_SITUATIONS=="Y",TRUE,FALSE)
prere$On_guard <- ifelse(prere$ON_GUARD=="Y",TRUE,FALSE)
prere$Detached <- ifelse(prere$DETACHED=="Y",TRUE,FALSE)
prere$Little_interest <- 1*ifelse(as.numeric(as.character(prere$LITTLE_INTEREST))>0,TRUE,FALSE)
prere$Feeling_down <- ifelse(as.numeric(as.character(prere$FEELING_DOWN))>0,TRUE,FALSE)
risk.matrix <- as.matrix(dplyr::select(prere,Nightmares,Avoid_situations,Detached,On_guard,Feeling_down,Little_interest))
pcl_predictions <- predict(pcl.model,newdata=prere)
colMeans(is.na(risk.matrix))
risk.matrix[rowMeans(is.na(risk.matrix))>0.75,] <- 0
bigMat.impute <- impute.knn(t(risk.matrix))
imputed <- t(bigMat.impute$data)
class(imputed) <- "logical"
imputed <- data.frame(imputed)
imputed$Little_interest <- 1*imputed$Little_interest
pcl_predictions <- predict(pcl.model,newdata=data.frame(imputed),se=TRUE,interval="prediction")
prere$pcl_pred2 <- pcl_predictions$fit[,"fit"]
prere$pcl_pred_se <- (pcl_predictions$fit[,"upr"]-pcl_predictions$fit[,"lwr"])/(2*1.96)
with(prere,plot(prere$pcl_pred2,prere$pcl_pred_se))
with(prere,plot(pcl_prediction,pcl_predictions$fit[,"fit"]))
for(i in 1:10){
x <- prere$pcl_prediction + rnorm(nrow(prere))*prere$pcl_pred_se
prere[[paste0("pcl_imp_",i)]] <- ifelse(x<17,17,ifelse(x>81,81,x))
}
addnoise <- function(x){
y <- x + rnorm(length(x))*7.555
y <- ifelse(y<17,17,ifelse(y>81,81,y))
return(y)
}
with(prere,plot(x,prere$pcl_prediction))
prere3 <- prere
file.info(list.files(source_info$data.dir,full.names=1))
preposts <- Read("DW0001_PCLS-C.csv","pre and post PCL")
preposts$pcldate <- as.Date(preposts$pcls_date,"%m/%d/%Y")
preposts$SID <- preposts$sid
pcl.time <- ddply(prere3,"SID",function(x){
data.frame(refdate = min(x$D_DEPART,na.rm=TRUE))
})
prere3 <- merge(prere3,pcl.time)
#pcls$D_EVENT <- as.Date(pcls$PCLC_date,"%m/%d/%y")
pclssimple <- subset(preposts,select=c("SID","PclsTot","pcldate","visit_type"))
pclssimple <- merge(pclssimple,pcl.time)
pclssimple$study_day <- as.numeric(pclssimple$pcldate - pclssimple$refdate)
#pclssimple$Time.span.days <-
ggplot(pclssimple,aes(x=study_day,fill=visit_type)) + geom_histogram()
ggplot(pclssimple,aes(x=study_day,y=PclsTot)) + geom_point()+geom_smooth()
with23 <- ddply(prere3,"SID",function(x){
data.frame(with3=(max(x$Time.order)>1))
})
max(prere3$TimeEarly)
prerewith3 <- subset(prere3,SID %in% subset(with23,with3==TRUE)$SID)
prerewith3$PclsTot <- prerewith3$pcl_prediction
prerewith3$visit_type <- as.character(prerewith3$Time.order)
alltimes <- rbind.fill(subset(prerewith3,select=c(c("SID","PclsTot","study_day","visit_type"))),
subset(pclssimple,select=c(c("SID","PclsTot","study_day","visit_type"))))
alltimes$visit_type <- as.factor(alltimes$visit_type)
Write(alltimes,"pcl_data.csv","bare bones data")
ggplot(alltimes,aes(x=study_day,fill=visit_type)) + geom_histogram()
ggplot(alltimes,aes(x=study_day,fill=visit_type,y=PclsTot)) + geom_point(aes(color=visit_type))
alltimes$PclsTot.Imp <- ifelse(alltimes$visit_type %in% 1:3,addnoise(alltimes$PclsTot),alltimes$PclsTot)
alltimesfirst <- ddply(Sortby(alltimes,"study_day"),c("SID","visit_type"),function(x){
x <- x[1,]
})
alltimesfirst$visit_type <- factor(alltimesfirst$visit_type,levels=c("Pre",1:6,"Post"))
for(i in 1:10){
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
names(dataout)[-1] <- paste0("visit_",names(dataout)[-1],"_PCL")
dataout2 <- dcast(SID~visit_type,data=alltimesfirst,value.var="study_day")
names(dataout2)[-1] <- paste0("visit_",names(dataout2)[-1],"_day")
dataout0 <- merge(dataout,dataout2)
Write(dataout0,paste0("imputed_pcl_",i,".csv"))
}
rm(list=ls())
set.seed( 2011 )
library(IT2)
library(plyr)
library(dplyr)
library(impute)
library(lcmm)
library(flexmix)
library(reshape2)
library(MplusAutomation)
library(doMC)
source.file <-"pcl_total_lcmm_prepost_fit_test.R"
project.id <- "Williams_PTSD"
source_info <- create.source.file.dir(project.id=project.id,source.file=source.file,get.project.path(project.id),
source.description="tests lcmm for robustness")
# Program body here
rout <- source_info$report
Get.file.info(source_info,path.grep="pcl_hockeystick.Rdata")
prere3 <- Load.branch("pcl_hockeystick.Rdata")
set.seed(2014)
prere <- prere3
pcl.model <- Load.branch("pcl_model.Rdata")
prere$Nightmares   <- ifelse(prere$NIGHTMARES=="Y",TRUE,FALSE)
prere$Avoid_situations <- ifelse(prere$AVOID_SITUATIONS=="Y",TRUE,FALSE)
prere$On_guard <- ifelse(prere$ON_GUARD=="Y",TRUE,FALSE)
prere$Detached <- ifelse(prere$DETACHED=="Y",TRUE,FALSE)
prere$Little_interest <- 1*ifelse(as.numeric(as.character(prere$LITTLE_INTEREST))>0,TRUE,FALSE)
prere$Feeling_down <- ifelse(as.numeric(as.character(prere$FEELING_DOWN))>0,TRUE,FALSE)
risk.matrix <- as.matrix(dplyr::select(prere,Nightmares,Avoid_situations,Detached,On_guard,Feeling_down,Little_interest))
pcl_predictions <- predict(pcl.model,newdata=prere)
colMeans(is.na(risk.matrix))
risk.matrix[rowMeans(is.na(risk.matrix))>0.75,] <- 0
bigMat.impute <- impute.knn(t(risk.matrix))
imputed <- t(bigMat.impute$data)
class(imputed) <- "logical"
imputed <- data.frame(imputed)
imputed$Little_interest <- 1*imputed$Little_interest
pcl_predictions <- predict(pcl.model,newdata=data.frame(imputed),se=TRUE,interval="prediction")
prere$pcl_pred2 <- pcl_predictions$fit[,"fit"]
prere$pcl_pred_se <- (pcl_predictions$fit[,"upr"]-pcl_predictions$fit[,"lwr"])/(2*1.96)
with(prere,plot(prere$pcl_pred2,prere$pcl_pred_se))
with(prere,plot(pcl_prediction,pcl_predictions$fit[,"fit"]))
for(i in 1:10){
x <- prere$pcl_prediction + rnorm(nrow(prere))*prere$pcl_pred_se
prere[[paste0("pcl_imp_",i)]] <- ifelse(x<17,17,ifelse(x>81,81,x))
}
addnoise <- function(x){
y <- x + rnorm(length(x))*7.555
y <- ifelse(y<17,17,ifelse(y>81,81,y))
return(y)
}
with(prere,plot(x,prere$pcl_prediction))
prere3 <- prere
file.info(list.files(source_info$data.dir,full.names=1))
preposts <- Read("DW0001_PCLS-C.csv","pre and post PCL")
preposts$pcldate <- as.Date(preposts$pcls_date,"%m/%d/%Y")
preposts$SID <- preposts$sid
pcl.time <- ddply(prere3,"SID",function(x){
data.frame(refdate = min(x$D_DEPART,na.rm=TRUE))
})
prere3 <- merge(prere3,pcl.time)
#pcls$D_EVENT <- as.Date(pcls$PCLC_date,"%m/%d/%y")
pclssimple <- subset(preposts,select=c("SID","PclsTot","pcldate","visit_type"))
pclssimple <- merge(pclssimple,pcl.time)
pclssimple$study_day <- as.numeric(pclssimple$pcldate - pclssimple$refdate)
#pclssimple$Time.span.days <-
ggplot(pclssimple,aes(x=study_day,fill=visit_type)) + geom_histogram()
ggplot(pclssimple,aes(x=study_day,y=PclsTot)) + geom_point()+geom_smooth()
with23 <- ddply(prere3,"SID",function(x){
data.frame(with3=(max(x$Time.order)>1))
})
max(prere3$TimeEarly)
prerewith3 <- subset(prere3,SID %in% subset(with23,with3==TRUE)$SID)
prerewith3$PclsTot <- prerewith3$pcl_prediction
prerewith3$visit_type <- as.character(prerewith3$Time.order)
alltimes <- rbind.fill(subset(prerewith3,select=c(c("SID","PclsTot","study_day","visit_type"))),
subset(pclssimple,select=c(c("SID","PclsTot","study_day","visit_type"))))
alltimes$visit_type <- as.factor(alltimes$visit_type)
Write(alltimes,"pcl_data.csv","bare bones data")
ggplot(alltimes,aes(x=study_day,fill=visit_type)) + geom_histogram()
ggplot(alltimes,aes(x=study_day,fill=visit_type,y=PclsTot)) + geom_point(aes(color=visit_type))
alltimes$PclsTot.Imp <- ifelse(alltimes$visit_type %in% 1:3,addnoise(alltimes$PclsTot),alltimes$PclsTot)
alltimesfirst <- ddply(Sortby(alltimes,"study_day"),c("SID","visit_type"),function(x){
x <- x[1,]
})
alltimesfirst$visit_type <- factor(alltimesfirst$visit_type,levels=c("Pre",1:6,"Post"))
for(i in 1:10){
alltimesfirst$PclsTot.Imp <- ifelse(alltimesfirst$visit_type %in% 1:3,addnoise(alltimesfirst$PclsTot),alltimesfirst$PclsTot)
dataout <- dcast(SID~visit_type,data=alltimesfirst,value.var="PclsTot.Imp")
names(dataout)[-1] <- paste0("visit_",names(dataout)[-1],"_PCL")
dataout2 <- dcast(SID~visit_type,data=alltimesfirst,value.var="study_day")
names(dataout2)[-1] <- paste0("visit_",names(dataout2)[-1],"_day")
dataout0 <- merge(dataout,dataout2)
Write(dataout0,paste0("imputed_pcl_",i,".csv"),row.names=FALSE)
}

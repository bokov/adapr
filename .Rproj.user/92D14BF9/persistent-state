build-last-errors="[]"
build-last-errors-base-dir="~/Documents/Projects/adapr/"
build-last-outputs="[{\"output\":\"==> devtools::document(roclets=c('rd', 'collate', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"Updating adapr documentation\\n\",\"type\":2},{\"output\":\"Loading adapr\\n\",\"type\":2},{\"output\":\"Updating roxygen version in  /Users/Gelfond/Documents/Projects/adapr/DESCRIPTION \\n\",\"type\":1},{\"output\":\"Writing Check.file.hash.Rd\\nWriting Check.file.hash.source.Rd\\nWriting Check.file.mtime.source.Rd\\nWriting Condense.file.info.Rd\\nWriting Digest.Rd\\nWriting Get.file.info.Rd\\nWriting Graph.Rd\\nWriting Harvest.trees.Rd\\nWriting ID.sync.Rd\\nWriting Make.dependency.graph.obj.Rd\\nWriting Read.Rd\\nWriting Read.cap.Rd\\nWriting Render_Rmd.Rd\\nWriting Sync.test.pi.Rd\\nWriting Write.Rd\\nWriting Create.file.info.Rd\\nWriting create_markdown.Rd\\nWriting create_program_graph.Rd\\nWriting create_source_file_dir.Rd\\nWriting default.adapr.setup.Rd\\nWriting dependency-class.Rd\\nWriting finalize_dependency.Rd\\nWriting get_adapr_options.Rd\\nWriting set_adapr_options.Rd\\nWriting get.fs.time.Rd\\nWriting get_orchard.Rd\\nWriting get.project.info.Rd\\nWriting get.project.info.si.Rd\\nWriting get.project.path.Rd\\nWriting get.project.publish.path.Rd\\nWriting get.project.swap.directory.Rd\\nWriting git.commit.Rd\\nWriting git.add.Rd\\nWriting git.configure.test.Rd\\nWriting git.configure.Rd\\nWriting git.history.search.Rd\\nWriting git.info.Rd\\nWriting git.init.Rd\\nWriting git_path.Rd\\nWriting guess.write.fcn.Rd\\nWriting guess.read.fcn.Rd\\nWriting id_new_libs.Rd\\nWriting initialize_dependency_info.Rd\\nWriting Load.branch.Rd\\nWriting load.install.library.file.Rd\\nWriting load.source.directory.Rd\\nWriting make.hyperlink.Rd\\nWriting pull_source_info.Rd\\nWriting Make.summary.graph.Rd\\nWriting path.expand.2.Rd\\nWriting plant.orchard.Rd\\nWriting first.project.Rd\\nWriting plant.tree.Rd\\nWriting redirect.tree.Rd\\nWriting program.io.table.Rd\\nWriting project.directory.tree.Rd\\nWriting project.report.Rd\\nWriting project_report_markdown.Rd\\nWriting project_report_send.Rd\\nWriting project_report_send_rmd.Rd\\nWriting project_reporter.Rd\\nWriting read.dependency.Rd\\nWriting rework.project.path.Rd\\nWriting send.branch.Rd\\nWriting send.branch.si.Rd\\nWriting shinyTree.Rd\\nWriting adapr21.Rd\\nWriting source.sync.si.Rd\\nWriting source_sync_si_load.Rd\\nWriting sprout.program.Rd\\nWriting swap.project.paths.Rd\\nWriting Sync.test.OLD.Rd\\nWriting Sync.test_2nd.Rd\\nWriting Sync.test.Rd\\nWriting sync.test.si.Rd\\n\",\"type\":1},{\"output\":\"Writing Write.cap.Rd\\nWriting write.dependency.Rd\\nWriting NAMESPACE\\n\",\"type\":1},{\"output\":\"Warning messages:\\n1: @description [get.fs.time.R#8]: requires a value \\n2: @param [make_source_info.R#3]: requires name and description \\n\",\"type\":2},{\"output\":\"Documentation completed\\n\\n\",\"type\":1},{\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source adapr\\n\\n\",\"type\":0},{\"output\":\"* installing to library ‘/Library/Frameworks/R.framework/Versions/3.3/Resources/library’\\n\",\"type\":1},{\"output\":\"* installing *source* package ‘adapr’ ...\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** inst\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Warning: /Users/Gelfond/Documents/Projects/adapr/man/adapr-package.Rd:26: All text must be in a section\\n\",\"type\":2},{\"output\":\"Warning: /Users/Gelfond/Documents/Projects/adapr/man/adapr-package.Rd:27: All text must be in a section\\n\",\"type\":2},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (adapr)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
